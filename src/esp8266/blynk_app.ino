/*
 * Blynk is a platform with iOS and Android apps to control
 * Arduino, Raspberry Pi and the likes over the Internet.
 * You can easily build graphic interfaces for all your
 * projects by simply dragging and dropping widgets.
 *
 *   Downloads, docs, tutorials: http://www.blynk.cc
 *   Blynk community:            http://community.blynk.cc
 *   Social networks:            http://www.fb.com/blynkapp
 *                               http://twitter.com/blynk_app
 *
 * Blynk library is licensed under MIT license
 *
 *
 */

#define BLYNK_PRINT Serial    // Comment this out to disable prints and save space
#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <SimpleTimer.h>
#include "DHT.h"

// Uncomment one of the lines bellow for whatever DHT sensor type you're using!
#define DHTTYPE DHT11   // DHT 11
//#define DHTTYPE DHT21   // DHT 21 (AM2301)
//#define DHTTYPE DHT22   // DHT 22  (AM2302), AM2321

// DHT Sensor
const int DHTPin = 5;
// Initialize DHT sensor.
DHT dht(DHTPin, DHTTYPE);

// You should get Auth Token in the Blynk App.
// REPLACE THE VARIABLE BELOW WITH YOUR AUTH TOKEN GENERATED BY BLYNK
char auth[] = "REPLACE_WITH_YOUR_AUTH_TOKEN"; 

SimpleTimer timer;

// Temporary variables
static char celsiusTemp[7];
static char fahrenheitTemp[7];
static char humidityTemp[7];

// This function sends DHT readings to Virtual Pin 1 and 2.
// In the app, Widget's reading frequency should be set to PUSH
void sendsNewReadings()
{
   // Sensor readings may also be up to 2 seconds 'old' (its a very slow sensor)
   float h = dht.readHumidity();
   // Read temperature as Celsius (the default)
   float t = dht.readTemperature();
   // Read temperature as Fahrenheit (isFahrenheit = true)
   float f = dht.readTemperature(true);
   
   // Check if any reads failed and exit early (to try again).
   if (isnan(h) || isnan(t) || isnan(f)) {
      Serial.println("Failed to read from DHT sensor!");
   }
   else{
      // Computes temperature values in Celsius + Fahrenheit and Humidity
      float hic = dht.computeHeatIndex(t, h, false);       
      dtostrf(hic, 6, 2, celsiusTemp);             
      float hif = dht.computeHeatIndex(f, h);
      dtostrf(hif, 6, 2, fahrenheitTemp);         
      dtostrf(h, 6, 2, humidityTemp);
      Blynk.virtualWrite(1, celsiusTemp); //virtual pin 1 for temperature in celsius
      // Uncomment the following line to use temperature in Fahrenheit
      //Blynk.virtualWrite(1, fahrenheitTemp);
      Blynk.virtualWrite(2, humidityTemp); // virtual pin 2 for humidity
   }
}

void setup()
{
  Serial.begin(9600);
  
  // REPLACE WITH YOUR SSID and PASSWORD
  Blynk.begin(auth, "REPLACE_WITH_YOUR_SSID", "REPLACE_WITH_YOUR_PASSWORD"); 
 
  // Setup a function to be called every 15 seconds
  timer.setInterval(15000L, sendsNewReadings);
}

void loop()
{
  Blynk.run(); // Initiates Blynk
  timer.run(); // Initiates SimpleTimer
}
